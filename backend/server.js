import express from "express";
// const fs = require('fs');
import { normalize } from "./adapters/threadfix.js";
import { fetchDataFromKiuwan } from "./adapters/kiuwan.js";

import axios from "axios";
import { THREADFIX_APIKEY, THREADFIX_BASEURL } from "./config.js";
import data from "./adapters/threadfix_response.json" assert { type: "json" };
import path from "path";

const __dirname = path.resolve(path.dirname(""));
const app = express();
const port = process.env.PORT || 9876;

app.use("/", express.static(__dirname + "/"));

const env = process.env.NODE_ENV;

app.get("/api/kiuwan", async function (req, res) {
  console.log("fetching data..", req.query.startDate, req.query.endDate);

  try {
    const data = await fetchDataFromKiuwan(
      req.query.appName,
      req.query.startDate,
      req.query.endDate
    );
    res.writeHead(200, { "Content-Type": "application/json" });
    res.end(JSON.stringify(data));
  } catch (e) {
    console.log("ERROR", e.message);

    res.writeHead(500, { "Content-Type": "text/plain" });
    res.end("An error occurred " + e.message);
  }
});

/**
 * Just a basic listener at the root, serving normalized json data
 * to be used in the frontend to display the heatmap
 */
app.get("/api", function (req, res) {
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Request-Method", "*");
  res.setHeader("Access-Control-Allow-Methods", "OPTIONS, GET");
  res.setHeader("Access-Control-Allow-Headers", "*");
  if (req.method === "OPTIONS") {
    res.writeHead(200);
    res.end();
    return;
  }

  const axiosConfig = {
    mode: "no-cors",
    headers: {
      Authorization: "APIKEY " + THREADFIX_APIKEY,
    },
  };

  function fetchDataFromApi(callback) {
    if (env === "production") {
      axios
        .get(THREADFIX_BASEURL + "rest/latest/applications", axiosConfig)
        .then(function (response) {
          callback(null, normalize(response.data));
        })
        .catch(function (error) {
          callback(error);
        });
    } else {
      callback(null, normalize(data));
    }
  }

  console.log("fetching data..");

  fetchDataFromApi((error, data) => {
    if (error) {
      console.log("ERROR", error);

      res.writeHead(500, { "Content-Type": "text/plain" });
      res.end("An error occurred");
    } else {
      // Set the response header to indicate that the response will be in JSON format
      res.writeHead(200, { "Content-Type": "application/json" });

      // Send the JSON data as the response
      res.end(JSON.stringify(data));
    }
  });
});

app.listen(port);
console.log("Server running at http://localhost:" + port + "/");
