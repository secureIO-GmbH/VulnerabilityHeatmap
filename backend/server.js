import express from "express";
// const fs = require('fs');
import { normalize } from "./adapters/threadfix.js";
import {
  // fetchKiuwanApps,
  fetchDataFromKiuwan,
} from "./adapters/kiuwan.js";

import axios from "axios";
import { THREADFIX_APIKEY, THREADFIX_BASEURL } from "./config.js";
import data from "./adapters/threadfix_response.json" assert { type: "json" };
import path from "path";

const __dirname = path.resolve(path.dirname(""));
const app = express();
const port = process.env.PORT || 9876;

app.use("/", express.static(__dirname + "/"));

const env = process.env.NODE_ENV;

const axiosConfig = {
  mode: "no-cors",
  headers: {
    Authorization: "APIKEY " + THREADFIX_APIKEY,
  },
};

/**
 * Kiuwan API
 */
app.get("/api/kiuwan", async function (req, res) {
  console.log("fetching kiuwan data..", req.query.startDate, req.query.endDate);

  try {
    const data = await fetchDataFromKiuwan(
      req.query.appName,
      req.query.startDate,
      req.query.endDate,
    );
    res.writeHead(200, { "Content-Type": "application/json" });
    res.end(JSON.stringify(data));
  } catch (e) {
    console.log("ERROR", e);

    res.writeHead(500, { "Content-Type": "application/json" });
    res.end(JSON.stringify({ error: "An error occurred " + e.message }));
  }
});

/**
 * Threadfix API
 */
app.get("/api/threadfix", async function (req, res) {
  // TODO: implement mapping of names so we could fetch kiuwan scan details for a certain CW
  // const kiuwanApps = await fetchKiuwanApps();
  // console.log("????????", apps);

  function fetchDataFromApi(callback) {
    if (env === "production") {
      let url = THREADFIX_BASEURL + "rest/latest/applications";

      if (req.query.appName) {
        url += `/allTeamLookup?name=${req.query.appName}`;
      }

      axios
        .get(url, axiosConfig)
        .then(function (response) {
          callback(null, normalize(response.data));
        })
        .catch(function (error) {
          callback(error);
        });
    } else {
      callback(null, normalize(data));
    }
  }

  console.log("fetching data..");

  fetchDataFromApi((error, data) => {
    if (error) {
      console.log("ERROR", error);

      res.writeHead(500, { "Content-Type": "text/plain" });
      res.end("An error occurred: " + error.message);
    } else {
      // Set the response header to indicate that the response will be in JSON format
      res.writeHead(200, { "Content-Type": "application/json" });

      // Send the JSON data as the response
      res.end(data ? JSON.stringify(data) : "[]");
    }
  });
});

// TODO: why does this take so long?
app.get("/api/threadfix/:scanId", async function (req, res) {
  function fetchDataFromApi(callback) {
    let url =
      THREADFIX_BASEURL + "rest/latest/scans/" + req.params.scanId + "?page=1";
    console.log("fetching: ", url);

    axios
      .get(url, axiosConfig)
      .then(function (response) {
        callback(null, response.data);
      })
      .catch(function (error) {
        callback(error);
      });
  }

  fetchDataFromApi((error, data) => {
    if (error) {
      console.log("ERROR", error);

      res.writeHead(500, { "Content-Type": "text/plain" });
      res.end("An error occurred: " + error.message);
    } else {
      // Set the response header to indicate that the response will be in JSON format
      res.writeHead(200, { "Content-Type": "application/json" });
      // Send the JSON data as the response
      res.end(data ? JSON.stringify(data) : "[]");
    }
  });
});

app.listen(port);
console.log("Server running at http://localhost:" + port + "/");
